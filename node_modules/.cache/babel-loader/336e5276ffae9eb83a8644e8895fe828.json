{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Chartjs.css\";\nimport { Bar, Line, Doughnut } from \"react-chartjs-2\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Chartjs = function Chartjs() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      casConfirmes = _useState4[0],\n      setcasConfirmes = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hospitalises = _useState6[0],\n      sethospitalises = _useState6[1];\n\n  var chart = function chart() {\n    var casConf = [];\n    var hospit = [];\n    var code = [];\n    var deces = [];\n    axios.get(\"https://coronavirusapi-france.vercel.app/AllLiveData\").then(function (res) {\n      // setcovidData(res.data)\n      console.log(res);\n\n      var _iterator = _createForOfIteratorHelper(res.data.allLiveFranceData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dataObj = _step.value;\n          //console.log(dataObj)\n          casConf.push(parseInt(dataObj.casConfirmes));\n          hospit.push(parseInt(dataObj.hospitalises)); // date.push(dataObj.date)\n\n          deces.push(dataObj.deces);\n          code.push(dataObj.code);\n        } //console.log(casConf,hospit)\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      setChartData({\n        labels: code,\n        datasets: [{\n          label: \"Hospitalitation\",\n          data: hospit,\n          fill: false,\n          backgroundColor: [\"red\"],\n          borderColor: 'rgba(255, 99, 132, 0.2)',\n          borderWidth: 4\n        }, {\n          label: \"Mort Humain\",\n          data: deces,\n          backgroundColor: [\"green\"],\n          borderColor: 'bleu',\n          borderWidth: 4\n        }]\n      });\n      sethospitalises({\n        labels: ['deces', 'hospit'],\n        datasets: [{\n          label: \"Décés Humains\",\n          data: deces,\n          hospit: hospit,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n          borderWidth: 4\n        }, options]\n      });\n    }).catch(function (err) {// console.log(err);\n    }); // console.log(casConf, hospit);\n  };\n\n  useEffect(function () {\n    chart();\n  }, []);\n  var options = {\n    maintainAspectRatio: true // scales: {\n    // x: {\n    //   type: 'time',\n    //   display: true,\n    //   title: \n    //   {\n    //     display: true,\n    //     text: 'Date'\n    //   },\n    //   ticks: \n    //   {\n    //     major:\n    //      {\n    //       enabled: true\n    //     },\n    //   }\n    //   }  \n    // }\n\n  }; // function Chartjs() {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: casConfirmes,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Chartjs, \"8lxhPCcKloflsnyVQQ3jh/IDQEI=\");\n\n_c = Chartjs;\nexport default Chartjs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartjs\");","map":{"version":3,"sources":["/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx"],"names":["React","Bar","Line","Doughnut","useState","useEffect","axios","Chartjs","chartData","setChartData","casConfirmes","setcasConfirmes","hospitalises","sethospitalises","chart","casConf","hospit","code","deces","get","then","res","console","log","data","allLiveFranceData","dataObj","push","parseInt","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","options","catch","err","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Chartjs.css\"\nimport { Bar, Line, Doughnut } from \"react-chartjs-2\";\nimport { useState, useEffect} from 'react';\nimport axios from \"axios\";\n\n\n\nconst Chartjs = () => {\n    const [chartData, setChartData] = useState([]);\n        const [casConfirmes, setcasConfirmes] = useState([]);\n             const [hospitalises, sethospitalises] = useState([]);\n\n\n    const chart = () => {\n         let casConf = [];\n         let hospit = [];\n         let code = [];\n         let deces = [];\n\n    axios\n      .get(\"https://coronavirusapi-france.vercel.app/AllLiveData\")\n      .then(res => {\n          // setcovidData(res.data)\n        console.log(res);\n        for (const dataObj of res.data.allLiveFranceData) {\n            //console.log(dataObj)\n          casConf.push(parseInt(dataObj.casConfirmes));\n          hospit.push(parseInt(dataObj.hospitalises));\n          // date.push(dataObj.date)\n          deces.push(dataObj.deces)\n          code.push(dataObj.code)\n        }\n         //console.log(casConf,hospit)\n        setChartData({\n          labels: code,\n          datasets: [\n            {\n              label: \"Hospitalitation\",\n              data: hospit,\n              fill: false,\n              backgroundColor: [\"red\"],\n              borderColor: 'rgba(255, 99, 132, 0.2)',\n              borderWidth: 4\n            },\n            {\n              label: \"Mort Humain\",\n              data: deces,\n              backgroundColor: [\"green\"],\n              borderColor: 'bleu',\n              borderWidth: 4\n            }\n          ]\n        });\n       \n       \n       sethospitalises({\n          labels: ['deces','hospit'],\n          datasets: [\n            {\n              label: \"Décés Humains\",\n              data: deces,hospit,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            },\n          options: {\n    scales: {\n      xAxis: {\n        // The axis for this scale is determined from the first letter of the id as `'x'`\n        // It is recommended to specify `position` and / or `axis` explicitly.\n        type: 'time',\n        \n      }\n    }\n  }\n          ]\n        });\n\n      })\n      .catch(err => {\n       // console.log(err);\n      });\n    // console.log(casConf, hospit);\n  };\n\n  useEffect(() => {\n    chart();\n    }, []);\n\n\n\n      const options = {\n          maintainAspectRatio: true,\n        // scales: {\n        // x: {\n        //   type: 'time',\n        //   display: true,\n        //   title: \n        //   {\n        //     display: true,\n        //     text: 'Date'\n        //   },\n        //   ticks: \n        //   {\n        //     major:\n        //      {\n        //       enabled: true\n        //     },\n        //   }\n        //   }  \n        // }\n      }\n\n\n\n// function Chartjs() {\n    return (\n        <div className=\"container\">\n\n            <div className=\"card\">\n            <Bar data ={chartData} options={options} />\n            </div>\n\n            <div className=\"card\">\n            <Line data ={casConfirmes} options={options} />\n            </div>\n\n            <div className=\"card\">\n            <Line data ={chartData} options={options} />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Chartjs\n"]},"metadata":{},"sourceType":"module"}