{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Chartjs.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Chartjs = function Chartjs() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      casConfirmes = _useState4[0],\n      setcasConfirmes = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hospitalises = _useState6[0],\n      sethospitalises = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      covidData = _useState8[0],\n      setcovidData = _useState8[1];\n\n  var chart = function chart() {\n    var casConf = [];\n    var hospit = [];\n    var date = [];\n    var dece = [];\n    axios.get(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\").then(function (res) {\n      //   setcovidData(res.data)\n      // console.log(res);\n      var _iterator = _createForOfIteratorHelper(res.data),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dataObj = _step.value;\n          //console.log(dataObj)\n          casConf.push(parseInt(dataObj.casConfirmes));\n          hospit.push(parseInt(dataObj.hospitalises));\n          date.push(dataObj.date);\n          dece.push(dataObj.deces);\n        } // console.log(casConf,hospit)\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      setChartData({\n        labels: date,\n        datasets: [{\n          label: \"Hospitalisation\",\n          data: hospit,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n          borderWidth: 4\n        }]\n      });\n      setcasConfirmes({\n        labels: dece,\n        datasets: [{\n          label: \"Décés Humains\",\n          data: dece,\n          backgroundColor: [\"red\"],\n          borderWidth: 2\n        }]\n      });\n      sethospitalises({\n        labels: dece,\n        datasets: [{\n          label: \"Décés Humains\",\n          data: dece,\n          backgroundColor: [\"red\"],\n          borderWidth: 2\n        }]\n      });\n    }).catch(function (err) {// console.log(err);\n    }); // console.log(casConf, hospit);\n  };\n\n  useEffect(function () {\n    chart();\n  }, []);\n  var options = {\n    maintainAspectRatio: false\n  }; // function Chartjs() {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, _this), console.log(covidData)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: casConfirmes,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: hospitalises,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 14\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Chartjs, \"WJRb/0r+1oLWl4SXEkdZSkwduD0=\");\n\n_c = Chartjs;\nexport default Chartjs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartjs\");","map":{"version":3,"sources":["/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx"],"names":["React","Bar","Line","useState","useEffect","axios","Chartjs","chartData","setChartData","casConfirmes","setcasConfirmes","hospitalises","sethospitalises","covidData","setcovidData","chart","casConf","hospit","date","dece","get","then","res","data","dataObj","push","parseInt","deces","labels","datasets","label","backgroundColor","borderWidth","catch","err","options","maintainAspectRatio","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Chartjs.css\"\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect} from 'react';\nimport axios from \"axios\";\n\n\n\nconst Chartjs = () => {\n    const [chartData, setChartData] = useState([]);\n        const [casConfirmes, setcasConfirmes] = useState([]);\n             const [hospitalises, sethospitalises] = useState([]);\n                 const [covidData, setcovidData]= useState([])\n\n\n    const chart = () => {\n         let casConf = [];\n         let hospit = [];\n         let date = [];\n         let dece = [];\n\n    axios\n      .get(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\n      .then(res => {\n        //   setcovidData(res.data)\n       // console.log(res);\n        for (const dataObj of res.data) {\n            //console.log(dataObj)\n          casConf.push(parseInt(dataObj.casConfirmes));\n          hospit.push(parseInt(dataObj.hospitalises));\n          date.push(dataObj.date)\n          dece.push(dataObj.deces)\n\n        }\n        // console.log(casConf,hospit)\n        setChartData({\n          labels: date,\n          datasets: [\n            {\n              label: \"Hospitalisation\",\n              data: hospit,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            },\n          ]\n        });\n        setcasConfirmes({\n          labels: dece,\n          datasets: [\n            {\n              label: \"Décés Humains\",\n              data: dece,\n              backgroundColor: [\"red\"],\n              borderWidth: 2\n            },\n          ]\n        });\n       sethospitalises({\n          labels: dece,\n          datasets: [\n            {\n              label: \"Décés Humains\",\n              data: dece,\n              backgroundColor: [\"red\"],\n              borderWidth: 2\n            },\n          ]\n        });\n\n      })\n      .catch(err => {\n       // console.log(err);\n      });\n    // console.log(casConf, hospit);\n  };\n\n  useEffect(() => {\n    chart();\n    }, []);\n\n\n\n  const options = {\n    maintainAspectRatio: false,\n    }\n\n\n\n// function Chartjs() {\n    return (\n        <div className=\"container\">\n            <div className=\"card\">\n\n            <Bar data ={chartData} options={options} />\n            {console.log(covidData)}\n            </div>\n\n            <div className=\"card\">\n            <Line data ={casConfirmes} options={options} />\n            </div>\n\n             <div className=\"card\">\n            <Line data ={hospitalises} options={options} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chartjs\n"]},"metadata":{},"sourceType":"module"}