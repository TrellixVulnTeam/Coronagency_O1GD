{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/pages/Chartjs.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport \"./Chartjs.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Chartjs = function Chartjs() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      decesGueris = _useState4[0],\n      setDecesGueris = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newChartData = _useState6[0],\n      setNewChartData = _useState6[1];\n\n  var chart = function chart() {\n    var hospit = [];\n    var rea = [];\n    var code = [];\n    var deces = [];\n    var gueris = [];\n    var newHospit = [];\n    var newRea = [];\n    axios.get(\"https://a.nacapi.com/covidcustom20210812\").then(function (res) {\n      var _iterator = _createForOfIteratorHelper(res.data.allLiveFranceData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dataObj = _step.value;\n          hospit.push(parseInt(dataObj.hospitalises));\n          code.push(dataObj.nom);\n          deces.push(dataObj.deces);\n          rea.push(parseInt(dataObj.reanimation));\n          gueris.push(parseInt(dataObj.gueris));\n          newHospit.push(parseInt(dataObj.nouvellesHospitalisations));\n          newRea.push(parseInt(dataObj.nouvellesReanimations));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      setChartData({\n        labels: code,\n        datasets: [{\n          type: \"bar\",\n          label: \"Nbre en réanimation\",\n          data: rea,\n          backgroundColor: \"#EB1D27\",\n          borderColor: \"#EB1D27\"\n        }, {\n          type: \"bar\",\n          label: \"Nbre hospitalisation\",\n          data: hospit,\n          backgroundColor: \"#13C697\",\n          borderColor: \"#13C697\"\n        }],\n        options: {\n          responsive: true,\n          interaction: {\n            intersect: false\n          },\n          scales: {\n            x: {\n              stacked: true\n            },\n            y: {\n              stacked: true\n            }\n          }\n        }\n      });\n      setNewChartData({\n        labels: code,\n        datasets: [{\n          type: \"bar\",\n          label: \"Nbre en réanimation\",\n          data: newRea,\n          backgroundColor: \"#EB1D27\",\n          borderColor: \"#EB1D27\"\n        }, {\n          type: \"bar\",\n          label: \"Nbre hospitalisation\",\n          data: newHospit,\n          backgroundColor: \"#13C697\",\n          borderColor: \"#13C697\"\n        }],\n        options: {\n          responsive: true,\n          interaction: {\n            intersect: false\n          },\n          scales: {\n            x: {\n              stacked: true\n            },\n            y: {\n              stacked: true\n            }\n          }\n        }\n      });\n      setDecesGueris({\n        labels: code,\n        datasets: [{\n          label: \"Nbre de décès\",\n          data: deces,\n          backgroundColor: \"#EB1D27\",\n          borderColor: \"#EB1D27\",\n          fill: true\n        }, {\n          label: \"Nbre de guéris\",\n          data: gueris,\n          backgroundColor: \"#13C697\",\n          borderColor: \"#13C697\",\n          fill: true\n        }],\n        options: {\n          responsive: true\n        }\n      });\n    });\n  };\n\n  useEffect(function () {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backgroundChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titleChartLight\",\n      children: \"Graphiques rep\\xE9rentant diff\\xE9rentes donn\\xE9es et affich\\xE9es par r\\xE9gion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerChart\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"titleCard\",\n          children: \"Hospitalisations globales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: chartData.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"titleCard\",\n          children: \"Nouvelles hospitalisations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: newChartData,\n          options: newChartData.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"titleCard\",\n          children: \"Personnes gu\\xE9ris et d\\xE9c\\xE8s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Line, {\n          data: decesGueris,\n          options: decesGueris.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(Chartjs, \"1CRC1O9xDwALM0FzQIXfxWR3g/Q=\");\n\n_c = Chartjs;\nexport default Chartjs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartjs\");","map":{"version":3,"sources":["/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/pages/Chartjs.jsx"],"names":["React","Navbar","Bar","Line","useState","useEffect","axios","Chartjs","chartData","setChartData","decesGueris","setDecesGueris","newChartData","setNewChartData","chart","hospit","rea","code","deces","gueris","newHospit","newRea","get","then","res","data","allLiveFranceData","dataObj","push","parseInt","hospitalises","nom","reanimation","nouvellesHospitalisations","nouvellesReanimations","labels","datasets","type","label","backgroundColor","borderColor","options","responsive","interaction","intersect","scales","x","stacked","y","fill"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport \"./Chartjs.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect} from 'react';\nimport axios from \"axios\";\n\n\nconst Chartjs = () => {\n    const [chartData, setChartData] = useState([]);\n    const [decesGueris, setDecesGueris] = useState([]);\n    const [newChartData, setNewChartData] = useState([]);\n \n    const chart = () => {\n         let hospit = [];\n         let rea = [];\n         let code =[];\n         let deces = [];\n         let gueris = [];\n         let newHospit = [];\n         let newRea = [];\n \n    axios\n      .get(\"https://a.nacapi.com/covidcustom20210812\")\n      .then(res => {\n        for (const dataObj of res.data.allLiveFranceData) {\n          hospit.push(parseInt(dataObj.hospitalises));\n          code.push(dataObj.nom)\n          deces.push(dataObj.deces)\n          rea.push(parseInt(dataObj.reanimation))\n          gueris.push(parseInt(dataObj.gueris))\n          newHospit.push(parseInt(dataObj.nouvellesHospitalisations))\n          newRea.push(parseInt(dataObj.nouvellesReanimations))\n        }\n\n        setChartData({\n          labels: code,\n          datasets: [\n            {\n              type: \"bar\",\n              label: \"Nbre en réanimation\",\n              data: rea,\n              backgroundColor: \"#EB1D27\",\n              borderColor: \"#EB1D27\",\n            },\n            {\n              type: \"bar\",\n              label: \"Nbre hospitalisation\",\n              data: hospit,\n              backgroundColor: \"#13C697\",\n              borderColor: \"#13C697\"\n            },\n          ],\n          options:{\n            responsive: true,\n            interaction: {\n              intersect:false,\n            },\n            scales: {\n              x: {\n                stacked: true,\n              },\n              y: {\n                stacked:true,\n              },\n            },\n          }\n        });\n\n        setNewChartData({\n          labels: code,\n          datasets: [\n            {\n              type: \"bar\",\n              label: \"Nbre en réanimation\",\n              data: newRea,\n              backgroundColor: \"#EB1D27\",\n              borderColor: \"#EB1D27\",\n            },\n            {\n              type: \"bar\",\n              label: \"Nbre hospitalisation\",\n              data: newHospit,\n              backgroundColor: \"#13C697\",\n              borderColor: \"#13C697\"\n            },\n          ],\n          options:{\n            responsive: true,\n            interaction: {\n              intersect:false,\n            },\n            scales: {\n              x: {\n                stacked: true,\n              },\n              y: {\n                stacked:true,\n              },\n            },\n          }\n        });\n\n        setDecesGueris({\n          labels: code,\n          datasets: [\n            {\n              label: \"Nbre de décès\",\n              data: deces,\n              backgroundColor: \"#EB1D27\",\n              borderColor: \"#EB1D27\",\n              fill: true,\n            },\n\n            {\n              label: \"Nbre de guéris\",\n              data: gueris,\n              backgroundColor: \"#13C697\",\n              borderColor: \"#13C697\",\n              fill: true,\n            },\n            \n          ],\n          options:{\n            responsive: true,\n          }\n        });\n      })\n  };\n \n  useEffect(() => {\n    chart();\n    }, []);\n\n \n    return (\n      <div className=\"backgroundChart\">\n        <h1 className=\"titleChartLight\">Graphiques repérentant différentes données et affichées par région</h1>\n        <div className=\"containerChart\">\n          <Navbar />\n          \n          <div className=\"card\">\n              <h2 className=\"titleCard\">Hospitalisations globales</h2>\n            <Bar data ={chartData} options={chartData.options} />\n            </div>\n            <div className=\"card\">\n              <h2 className=\"titleCard\">Nouvelles hospitalisations</h2>\n            <Bar data ={newChartData} options={newChartData.options} />\n            </div>\n            <div className=\"card\">\n              <h2 className=\"titleCard\">Personnes guéris et décès</h2>\n            <Line data ={decesGueris} options={decesGueris.options} />\n            </div>\n        </div>\n      </div>\n    )\n}\n \nexport default Chartjs"]},"metadata":{},"sourceType":"module"}