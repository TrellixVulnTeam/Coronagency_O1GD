{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Chartjs.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\"; // const data = {\n//     labels: [\"red\", \"bleu\", \"jaune\", \"vert\", \"yellow\"],\n//     datasets: [\n//         {\n//             label: \"couleur preferer en france \",\n//             data: [\"11\", \"10\", \"9\", \"8\", \"7\"],\n//             backgroundColor:[\"red\", \"bleu\", \"jaune\", \"vert\", \"yellow\"]\n//         },\n//     ],\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Chartjs = function Chartjs() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1]; //   const [casConfirmes, setcasConfirmes] = useState([]);\n  //   const [hospitalises, sethospitalises] = useState([]);\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      covidData = _useState4[0],\n      setcovidData = _useState4[1];\n\n  var chart = function chart() {\n    var casConf = [];\n    var hospit = [];\n    var date = [];\n    axios.get(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\").then(function (res) {\n      //   setcovidData(res.data)\n      console.log(res);\n\n      var _iterator = _createForOfIteratorHelper(res.data),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dataObj = _step.value;\n          console.log(dataObj);\n          casConf.push(parseInt(dataObj.casConfirmes));\n          hospit.push(parseInt(dataObj.hospitalises));\n          date.push(dataObj.date);\n        } // console.log(casConf,hospit)\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      setChartData({\n        labels: date,\n        datasets: [{\n          label: \"année\",\n          data: hospit,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n          borderWidth: 4\n        }]\n      });\n    }).catch(function (err) {\n      console.log(err);\n    }); // console.log(casConf, hospit);\n  };\n\n  useEffect(function () {\n    chart();\n  }, []);\n  var options = {\n    maintainAspectRatio: false\n  }; // function Chartjs() {\n\n  return (\n    /*#__PURE__*/\n    //             <div className=\"container\">\n    //       <div>\n    //         <Line\n    //           data={chartData}\n    //           options={{\n    //             responsive: true,\n    //             title: { text: \"année\", display: true },\n    //             scales: {\n    //               yAxes: [\n    //                 {\n    //                   ticks: {\n    //                     autoSkip: true,\n    //                     maxTicksLimit: 10,\n    //                     beginAtZero: true\n    //                   },\n    //                   gridLines: {\n    //                     display: false\n    //                   }\n    //                 }\n    //               ],\n    //               xAxes: [\n    //                 {\n    //                   gridLines: {\n    //                     display: false\n    //                   }\n    //                 }\n    //               ]\n    //             }\n    //           }}\n    //         />\n    //       </div>\n    //     </div>\n    //   );\n    // };\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, _this), console.log(covidData)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, _this)\n  );\n};\n\n_s(Chartjs, \"2isbT0WM+FYnxSVtCQdAMVgCaHM=\");\n\n_c = Chartjs;\nexport default Chartjs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartjs\");","map":{"version":3,"sources":["/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx"],"names":["React","Bar","Line","useState","useEffect","axios","Chartjs","chartData","setChartData","covidData","setcovidData","chart","casConf","hospit","date","get","then","res","console","log","data","dataObj","push","parseInt","casConfirmes","hospitalises","labels","datasets","label","backgroundColor","borderWidth","catch","err","options","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Chartjs.css\"\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect} from 'react';\nimport axios from \"axios\";\n\n\n// const data = {\n//     labels: [\"red\", \"bleu\", \"jaune\", \"vert\", \"yellow\"],\n//     datasets: [\n//         {\n//             label: \"couleur preferer en france \",\n//             data: [\"11\", \"10\", \"9\", \"8\", \"7\"],\n//             backgroundColor:[\"red\", \"bleu\", \"jaune\", \"vert\", \"yellow\"]\n//         },\n//     ],\n// }\nconst Chartjs = () => {\n    const [chartData, setChartData] = useState([]);\n//   const [casConfirmes, setcasConfirmes] = useState([]);\n//   const [hospitalises, sethospitalises] = useState([]);\n\nconst [covidData, setcovidData]= useState([])\n\n\nconst chart = () => {\n    let casConf = [];\n    let hospit = [];\n    let date = [];\n    axios\n      .get(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\n      .then(res => {\n        //   setcovidData(res.data)\n        console.log(res);\n        for (const dataObj of res.data) {\n            console.log(dataObj)\n          casConf.push(parseInt(dataObj.casConfirmes));\n          hospit.push(parseInt(dataObj.hospitalises));\n          date.push(dataObj.date)\n        }\n        // console.log(casConf,hospit)\n\n        setChartData({\n          labels: date,\n          datasets: [\n            {\n              label: \"année\",\n              data: hospit,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            },\n\n            \n          ]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    // console.log(casConf, hospit);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n\n\n\nconst options = {\n    maintainAspectRatio: false,\n}\n\n\n\n// function Chartjs() {\n    return (\n\n//             <div className=\"container\">\n//       <div>\n//         <Line\n//           data={chartData}\n//           options={{\n//             responsive: true,\n//             title: { text: \"année\", display: true },\n//             scales: {\n//               yAxes: [\n//                 {\n//                   ticks: {\n//                     autoSkip: true,\n//                     maxTicksLimit: 10,\n//                     beginAtZero: true\n//                   },\n//                   gridLines: {\n//                     display: false\n//                   }\n//                 }\n//               ],\n//               xAxes: [\n//                 {\n//                   gridLines: {\n//                     display: false\n//                   }\n//                 }\n//               ]\n//             }\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n\n        <div className=\"container\">\n            <div className=\"card\">\n\n            <Bar data ={chartData} options={options} />\n            {console.log(covidData)}\n            </div>\n\n            <div className=\"card\">\n            <Line data ={chartData} options={options} />\n            </div>\n\n           \n        </div>\n    )\n}\n\nexport default Chartjs\n"]},"metadata":{},"sourceType":"module"}