{"ast":null,"code":"import _slicedToArray from \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx\",\n    _s2 = $RefreshSig$();\n\nimport \"./Chartjs.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chartjs() {\n  _s2();\n\n  var _this = this,\n      _s = $RefreshSig$();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      casConfirmes = _useState4[0],\n      setcasConfirmes = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hospitalises = _useState6[0],\n      sethospitalises = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      covidData = _useState8[0],\n      setcovidData = _useState8[1];\n\n  var chart = function chart() {\n    _s();\n\n    var casConf = [];\n    var hospit = [];\n    var date = [];\n    var deces = []; // }\n\n    useEffect(function () {\n      axios.get(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\").then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        return setChartData(data);\n      }).then(function (data) {\n        return setcasConfirmes(data);\n      });\n      chart();\n    }, []);\n    setChartData({\n      labels: date,\n      datasets: [{\n        label: \"Hospitalisation\",\n        data: chartData,\n        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n        borderWidth: 4\n      }]\n    });\n    setcasConfirmes({\n      labels: deces,\n      datasets: [{\n        label: \"Cas Comfirmer\",\n        data: hospitalises,\n        backgroundColor: [\"red\"],\n        borderWidth: 2\n      }]\n    }); //   .catch(err => {\n    //     console.log(err);\n    //   });\n    // console.log(casConf, hospit);\n\n    var options = {\n      maintainAspectRatio: false\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this), console.log(covidData)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: casConfirmes,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, _this);\n  };\n\n  _s(chart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n\n_s2(Chartjs, \"9Q9ZYP79QDs1vOu/pHno2MVZDLE=\");\n\n_c = Chartjs;\nexport default Chartjs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartjs\");","map":{"version":3,"sources":["/Users/peter/GitHub/projet-2/21-06-remotefr-p2-coronagency/src/components/Chartjs.jsx"],"names":["Bar","Line","useState","useEffect","axios","Chartjs","chartData","setChartData","casConfirmes","setcasConfirmes","hospitalises","sethospitalises","covidData","setcovidData","chart","casConf","hospit","date","deces","get","then","res","data","labels","datasets","label","backgroundColor","borderWidth","options","maintainAspectRatio","console","log"],"mappings":";;;;;AAAA,OAAO,eAAP;AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAAA;AAAA;;AAChB,kBAAkCH,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,YAAlB;;AACK,mBAAwCL,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOM,YAAP;AAAA,MAAqBC,eAArB;;AACK,mBAAwCP,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAqBC,eAArB;;AACI,mBAAiCT,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOU,SAAP;AAAA,MAAkBC,YAAlB;;AAEZ,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAChB,QAAIC,OAAO,GAAG,EAAd;AACC,QAAIC,MAAM,GAAG,EAAb;AACD,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAG,EAAZ,CAJgB,CAKrB;;AACAf,IAAAA,SAAS,CAAC,YAAM;AACZC,MAAAA,KAAK,CACJe,GADD,CACK,sFADL,EAECC,IAFD,CAEM,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAb;AAAA,OAFN,EAGCF,IAHD,CAGM,UAACE,IAAD;AAAA,eAAUf,YAAY,CAACe,IAAD,CAAtB;AAAA,OAHN,EAICF,IAJD,CAIM,UAACE,IAAD;AAAA,eAAUb,eAAe,CAACa,IAAD,CAAzB;AAAA,OAJN;AAMER,MAAAA,KAAK;AACV,KARQ,EAQN,EARM,CAAT;AAYHP,IAAAA,YAAY,CAAC;AACJgB,MAAAA,MAAM,EAAEN,IADJ;AAEJO,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,iBADT;AAEEH,QAAAA,IAAI,EAAEhB,SAFR;AAGEoB,QAAAA,eAAe,EAAE,CAAC,yBAAD,CAHnB;AAIEC,QAAAA,WAAW,EAAE;AAJf,OADQ;AAFN,KAAD,CAAZ;AAYOlB,IAAAA,eAAe,CAAC;AACdc,MAAAA,MAAM,EAAEL,KADM;AAEdM,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,eADT;AAEEH,QAAAA,IAAI,EAAEZ,YAFR;AAGEgB,QAAAA,eAAe,EAAE,CAAC,KAAD,CAHnB;AAIEC,QAAAA,WAAW,EAAE;AAJf,OADQ;AAFI,KAAD,CAAf,CA9BiB,CA2CrB;AACA;AACA;AACA;;AACA,QAAMC,OAAO,GAAG;AACfC,MAAAA,mBAAmB,EAAE;AADN,KAAhB;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCAEA,QAAC,GAAD;AAAK,UAAA,IAAI,EAAGvB,SAAZ;AAAuB,UAAA,OAAO,EAAEsB;AAAhC;AAAA;AAAA;AAAA;AAAA,iBAFA,EAGCE,OAAO,CAACC,GAAR,CAAYnB,SAAZ,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAOI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,IAAI,EAAGJ,YAAb;AAA2B,UAAA,OAAO,EAAEoB;AAApC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,eAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAeF,GAnEG;;AANc,KAMRd,KANQ;AA0ElB;;IA1EQT,O;;KAAAA,O;AA2ET,eAAeA,OAAf","sourcesContent":["import \"./Chartjs.css\"\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect} from 'react';\nimport axios from \"axios\";\n\nfunction Chartjs() {\n   const [chartData, setChartData] = useState([]);\n        const [casConfirmes, setcasConfirmes] = useState([]);\n             const [hospitalises, sethospitalises] = useState([]);\n                 const [covidData, setcovidData]= useState([])\n\n     const chart = () => {\n         let casConf = [];\n          let hospit = [];\n         let date = [];\n         let deces = [];\n    // }\n    useEffect(() => {\n        axios\n        .get(\"https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.json\")\n        .then((res) => res.data)\n        .then((data) => setChartData(data))\n        .then((data) => setcasConfirmes(data))\n       \n          chart();\n    }, [])\n\n\n\n setChartData({\n          labels: date,\n          datasets: [\n            {\n              label: \"Hospitalisation\",\n              data: chartData,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            },\n          ]\n        });\n\n        setcasConfirmes({\n          labels: deces,\n          datasets: [\n            {\n              label: \"Cas Comfirmer\",\n              data: hospitalises,\n              backgroundColor: [\"red\"],\n              borderWidth: 2\n            },\n          ]\n        });\n\n      \n    //   .catch(err => {\n    //     console.log(err);\n    //   });\n    // console.log(casConf, hospit);\n    const options = {\n     maintainAspectRatio: false,\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"card\">\n\n            <Bar data ={chartData} options={options} />\n            {console.log(covidData)}\n            </div>\n\n            <div className=\"card\">\n            <Line data ={casConfirmes} options={options} />\n            </div>\n\n           \n        </div>\n    )\n }\n}\nexport default Chartjs\n"]},"metadata":{},"sourceType":"module"}