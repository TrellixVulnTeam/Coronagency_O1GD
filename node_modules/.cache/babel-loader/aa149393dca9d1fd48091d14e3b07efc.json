{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/peter/GitHub/coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/peter/GitHub/coronagency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import Navbar from\"../components/Navbar\";import\"./Chartjs.css\";import{Bar,Line}from\"react-chartjs-2\";import{useState,useEffect}from'react';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chartjs=function Chartjs(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chartData=_useState2[0],setChartData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),decesGueris=_useState4[0],setDecesGueris=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),newChartData=_useState6[0],setNewChartData=_useState6[1];var chart=function chart(){var hospit=[];var rea=[];var code=[];var deces=[];var gueris=[];var newHospit=[];var newRea=[];axios.get(\"https://a.nacapi.com/covidcustom20210812\").then(function(res){var _iterator=_createForOfIteratorHelper(res.data.allLiveFranceData),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var dataObj=_step.value;hospit.push(parseInt(dataObj.hospitalises));code.push(dataObj.nom);deces.push(dataObj.deces);rea.push(parseInt(dataObj.reanimation));gueris.push(parseInt(dataObj.gueris));newHospit.push(parseInt(dataObj.nouvellesHospitalisations));newRea.push(parseInt(dataObj.nouvellesReanimations));}}catch(err){_iterator.e(err);}finally{_iterator.f();}setChartData({labels:code,datasets:[{type:\"bar\",label:\"Nbre en réanimation\",data:rea,backgroundColor:\"#EB1D27\",borderColor:\"#EB1D27\"},{type:\"bar\",label:\"Nbre hospitalisation\",data:hospit,backgroundColor:\"#13C697\",borderColor:\"#13C697\"}],options:{responsive:true,interaction:{intersect:false},scales:{x:{stacked:true,grid:{color:'gray'}},y:{stacked:true,grid:{color:'gray'}}}}});setNewChartData({labels:code,datasets:[{type:\"bar\",label:\"Nbre en réanimation\",data:newRea,backgroundColor:\"#EB1D27\",borderColor:\"#EB1D27\"},{type:\"bar\",label:\"Nbre hospitalisation\",data:newHospit,backgroundColor:\"#13C697\",borderColor:\"#13C697\"}],options:{responsive:true,interaction:{intersect:false},scales:{x:{stacked:true,grid:{color:'gray'}},y:{stacked:true,grid:{color:'gray'}}}}});setDecesGueris({labels:code,datasets:[{label:\"Nbre de décès\",data:deces,backgroundColor:\"#EB1D27\",borderColor:\"#EB1D27\",fill:true},{label:\"Nbre de guéris\",data:gueris,backgroundColor:\"#13C697\",borderColor:\"#13C697\",fill:true}],options:{responsive:true,scales:{x:{grid:{color:'gray'}},y:{grid:{color:'gray'}}}}});});};useEffect(function(){chart();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"backgroundChart\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"titleChartLight\",children:\"Donn\\xE9es graphiques affich\\xE9es par r\\xE9gion\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"containerChart\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"titleCard\",children:\"Hospitalisations totales\"}),/*#__PURE__*/_jsx(Bar,{data:chartData,options:chartData.options})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"titleCard\",children:\"Nouvelles hospitalisations\"}),/*#__PURE__*/_jsx(Bar,{data:newChartData,options:newChartData.options})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"titleCard\",children:\"Personnes gu\\xE9ris et d\\xE9c\\xE8s\"}),/*#__PURE__*/_jsx(Line,{data:decesGueris,options:decesGueris.options})]})]})]});};export default Chartjs;","map":{"version":3,"sources":["/Users/peter/GitHub/coronagency/src/pages/Chartjs.jsx"],"names":["React","Navbar","Bar","Line","useState","useEffect","axios","Chartjs","chartData","setChartData","decesGueris","setDecesGueris","newChartData","setNewChartData","chart","hospit","rea","code","deces","gueris","newHospit","newRea","get","then","res","data","allLiveFranceData","dataObj","push","parseInt","hospitalises","nom","reanimation","nouvellesHospitalisations","nouvellesReanimations","labels","datasets","type","label","backgroundColor","borderColor","options","responsive","interaction","intersect","scales","x","stacked","grid","color","y","fill"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport \"./Chartjs.css\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { useState, useEffect} from 'react';\nimport axios from \"axios\";\n\n\nconst Chartjs = () => {\n    const [chartData, setChartData] = useState([]);\n    const [decesGueris, setDecesGueris] = useState([]);\n    const [newChartData, setNewChartData] = useState([]);\n \n    const chart = () => {\n         let hospit = [];\n         let rea = [];\n         let code =[];\n         let deces = [];\n         let gueris = [];\n         let newHospit = [];\n         let newRea = [];\n \n    axios\n      .get(\"https://a.nacapi.com/covidcustom20210812\")\n      .then(res => {\n        for (const dataObj of res.data.allLiveFranceData) {\n          hospit.push(parseInt(dataObj.hospitalises));\n          code.push(dataObj.nom)\n          deces.push(dataObj.deces)\n          rea.push(parseInt(dataObj.reanimation))\n          gueris.push(parseInt(dataObj.gueris))\n          newHospit.push(parseInt(dataObj.nouvellesHospitalisations))\n          newRea.push(parseInt(dataObj.nouvellesReanimations))\n        }\n\n        setChartData({\n          labels: code,\n          datasets: [\n            {\n              type: \"bar\",\n              label: \"Nbre en réanimation\",\n              data: rea,\n              backgroundColor: \"#EB1D27\",\n              borderColor: \"#EB1D27\",\n            },\n            {\n              type: \"bar\",\n              label: \"Nbre hospitalisation\",\n              data: hospit,\n              backgroundColor: \"#13C697\",\n              borderColor: \"#13C697\",\n            },\n          ],\n          options:{\n            responsive: true,\n            interaction: {\n              intersect:false,\n            },\n            scales: {\n              x: {\n                stacked: true,\n                grid: {\n                  color: 'gray',\n                },\n              },\n              y: {\n                stacked:true,\n                grid: {\n                  color: 'gray',\n                },\n              },\n            },\n          }\n        });\n\n        setNewChartData({\n          labels: code,\n          datasets: [\n            {\n              type: \"bar\",\n              label: \"Nbre en réanimation\",\n              data: newRea,\n              backgroundColor: \"#EB1D27\",\n              borderColor: \"#EB1D27\",\n            },\n            {\n              type: \"bar\",\n              label: \"Nbre hospitalisation\",\n              data: newHospit,\n              backgroundColor: \"#13C697\",\n              borderColor: \"#13C697\"\n            },\n          ],\n          options:{\n            responsive: true,\n            interaction: {\n              intersect:false,\n            },\n            scales: {\n              x: {\n                stacked: true,\n                grid: {\n                  color: 'gray',\n                },\n              },\n              y: {\n                stacked:true,\n                grid: {\n                  color: 'gray',\n                },\n              },\n            },\n          }\n        });\n\n        setDecesGueris({\n          labels: code,\n          datasets: [\n            {\n              label: \"Nbre de décès\",\n              data: deces,\n              backgroundColor: \"#EB1D27\",\n              borderColor: \"#EB1D27\",\n              fill: true,\n            },\n\n            {\n              label: \"Nbre de guéris\",\n              data: gueris,\n              backgroundColor: \"#13C697\",\n              borderColor: \"#13C697\",\n              fill: true,\n            },\n            \n          ],\n          options:{\n            responsive: true,\n            scales: {\n              x: {\n                grid: {\n                  color: 'gray',\n                },\n              },\n              y: {\n                grid: {\n                  color: 'gray',\n                },\n              },\n            },\n          },\n          \n        });\n      })\n  };\n \n  useEffect(() => {\n    chart();\n    }, []);\n\n \n    return (\n      <div className=\"backgroundChart\">\n        <h1 className=\"titleChartLight\">Données graphiques affichées par région</h1>\n        <div className=\"containerChart\">\n          <Navbar />\n          \n          <div className=\"card\">\n              <h2 className=\"titleCard\">Hospitalisations totales</h2>\n            <Bar data ={chartData} options={chartData.options} />\n            </div>\n            <div className=\"card\">\n              <h2 className=\"titleCard\">Nouvelles hospitalisations</h2>\n            <Bar data ={newChartData} options={newChartData.options} />\n            </div>\n            <div className=\"card\">\n              <h2 className=\"titleCard\">Personnes guéris et décès</h2>\n            <Line data ={decesGueris} options={decesGueris.options} />\n            </div>\n        </div>\n      </div>\n    )\n}\n \nexport default Chartjs"]},"metadata":{},"sourceType":"module"}